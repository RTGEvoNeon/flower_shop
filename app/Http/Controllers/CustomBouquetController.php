<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use Illuminate\Support\Facades\Http;
use Illuminate\Support\Facades\Log;

class CustomBouquetController extends Controller
{
    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å —Ñ–æ—Ä–º—É —Å–æ–∑–¥–∞–Ω–∏—è –±—É–∫–µ—Ç–∞
     */
    public function show()
    {
        return view('custom-bouquet');
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –≤ Telegram
     */
    public function submit(Request $request)
    {
        // –í–∞–ª–∏–¥–∞—Ü–∏—è
        $validated = $request->validate([
            'customer_name' => 'required|string|max:255',
            'phone' => 'required|string|max:20',
            'color_scheme' => 'nullable|string',
            'mood' => 'nullable|string',
            'favorite_flowers' => 'nullable|string',
            'special_wishes' => 'nullable|string',
            'budget' => 'nullable|string',
            'custom_budget' => 'nullable|string',
            'contact_method' => 'nullable|array',
        ]);

        // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è Telegram
        $message = $this->formatTelegramMessage($validated);

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Telegram
        $sent = $this->sendToTelegram($message);

        if ($sent) {
            return redirect()->back()->with('success', '‚úÖ –°–ø–∞—Å–∏–±–æ! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞. –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è!');
        } else {
            return redirect()->back()->with('error', '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–∑–≤–æ–Ω–∏—Ç–µ –Ω–∞–º: 8 (953) 292-92-46');
        }
    }

    /**
     * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è Telegram
     */
    private function formatTelegramMessage(array $data): string
    {
        $message = "üå∏ <b>–ù–û–í–ê–Ø –ó–ê–Ø–í–ö–ê –ù–ê –ö–ê–°–¢–û–ú–ù–´–ô –ë–£–ö–ï–¢</b>\n\n";

        $message .= "üë§ <b>–ö–æ–Ω—Ç–∞–∫—Ç—ã:</b>\n";
        $message .= "–ò–º—è: {$data['customer_name']}\n";
        $message .= "–¢–µ–ª–µ—Ñ–æ–Ω: {$data['phone']}\n";

        if (!empty($data['contact_method'])) {
            $methods = implode(', ', $data['contact_method']);
            $message .= "–°–≤—è–∑—å: {$methods}\n";
        }

        $message .= "\nüí∞ <b>–ë—é–¥–∂–µ—Ç:</b>\n";
        if (!empty($data['custom_budget'])) {
            $message .= "{$data['custom_budget']}\n";
        } elseif (!empty($data['budget'])) {
            $message .= "{$data['budget']} ‚ÇΩ\n";
        } else {
            $message .= "–ù–µ —É–∫–∞–∑–∞–Ω\n";
        }

        if (!empty($data['color_scheme'])) {
            $message .= "\nüé® <b>–¶–≤–µ—Ç–æ–≤–∞—è –≥–∞–º–º–∞:</b>\n{$data['color_scheme']}\n";
        }

        if (!empty($data['mood'])) {
            $message .= "\nüí≠ <b>–ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ:</b>\n{$data['mood']}\n";
        }

        if (!empty($data['favorite_flowers'])) {
            $message .= "\nüåπ <b>–õ—é–±–∏–º—ã–µ —Ü–≤–µ—Ç—ã:</b>\n{$data['favorite_flowers']}\n";
        }

        if (!empty($data['special_wishes'])) {
            $message .= "\n‚ú® <b>–û—Å–æ–±—ã–µ –ø–æ–∂–µ–ª–∞–Ω–∏—è:</b>\n{$data['special_wishes']}\n";
        }

        $message .= "\nüìÖ <b>–î–∞—Ç–∞ –∑–∞—è–≤–∫–∏:</b> " . now()->format('d.m.Y H:i');

        return $message;
    }

    /**
     * –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram
     */
    private function sendToTelegram(string $message): bool
    {
        $botToken = env('TELEGRAM_BOT_TOKEN', '7510083058:AAGlbf4ELDiS0n4sCDi0CxHtdebzIBj0N98');
        $chatId = env('TELEGRAM_CHAT_ID'); // –£–ö–ê–ñ–ò–¢–ï –í–ê–® CHAT_ID –í .env

        if (empty($chatId)) {
            Log::error('TELEGRAM_CHAT_ID –Ω–µ —É–∫–∞–∑–∞–Ω –≤ .env —Ñ–∞–π–ª–µ');
            return false;
        }

        try {
            $response = Http::post("https://api.telegram.org/bot{$botToken}/sendMessage", [
                'chat_id' => $chatId,
                'text' => $message,
                'parse_mode' => 'HTML',
            ]);

            if ($response->successful()) {
                Log::info('–ó–∞—è–≤–∫–∞ –Ω–∞ –∫–∞—Å—Ç–æ–º–Ω—ã–π –±—É–∫–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ Telegram', ['response' => $response->json()]);
                return true;
            } else {
                Log::error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram', ['response' => $response->body()]);
                return false;
            }
        } catch (\Exception $e) {
            Log::error('–ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Telegram: ' . $e->getMessage());
            return false;
        }
    }
}
